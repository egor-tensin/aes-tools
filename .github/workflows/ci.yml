name: CI

on:
  push:
  pull_request:
  schedule:
    # Weekly, at 5:30 AM on Sunday (somewhat randomly chosen).
    - cron: '30 5 * * 0'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        toolset: [mingw, vs2015, vs2017, vs2019]
        platform: [x64, x86]
        use_asm: [1, 0]
        configuration: [Debug, Release]
        include:
          # MinGW builds are done on Linux, since it's more up-to-date there,
          # and it's much faster.
          - {toolset: mingw, os: ubuntu-20.04}
          - {toolset: vs2015, os: windows-2016}
          - {toolset: vs2017, os: windows-2016}
          - {toolset: vs2019, os: windows-2019}
        exclude:
          - {platform: x64, use_asm: 1}
          - {toolset: mingw, use_asm: 1}
    runs-on: '${{ matrix.os }}'
    name: 'Build: ${{ matrix.toolset }} / ${{ matrix.platform }} / asm${{ matrix.use_asm }} / ${{ matrix.configuration }}'
    env:
      TOOLSET: '${{ matrix.toolset }}'
      PLATFORM: '${{ matrix.platform }}'
      CONFIGURATION: '${{ matrix.configuration }}'
      BOOST_VERSION: 1.72.0
      CMAKE_FLAGS: -D 'AES_TOOLS_ASM=${{ matrix.use_asm }}'
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Cache Boost
        uses: actions/cache@v2
        with:
          path: '${{ runner.workspace }}/build/boost_*.tar.gz'
          key: 'boost_${{ env.BOOST_VERSION }}'
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: '${{ matrix.platform }}'
        if: matrix.toolset == 'mingw'
      - name: Build Boost
        run: make deps
      - name: Build
        run: make install
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with:
          name: 'aes-tools-${{ matrix.toolset }}-${{ matrix.platform }}-asm${{ matrix.use_asm }}-${{ matrix.configuration }}'
          path: '${{ runner.workspace }}/build/install/'
          if-no-files-found: error
      - name: Test
        run: make test
        if: runner.os == 'Windows'
