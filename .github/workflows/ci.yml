name: CI

on:
  push:
  pull_request:
  schedule:
    # Weekly, at 5:30 AM on Sunday (somewhat randomly chosen).
    - cron: '30 5 * * 0'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        # MinGW builds are done on Linux, since it's more up-to-date there, and
        # it's much faster.
        os: [ubuntu-20.04, windows-2016, windows-2019]
        platform: [x64, x86]
        use_asm: [1, 0]
        configuration: [Debug, Release]
        include:
          # Prettier run names.
          - {os: windows-2016, toolset: msvc, name: VS 2017}
          - {os: windows-2019, toolset: msvc, name: VS 2019}
          - {os: ubuntu-20.04, toolset: mingw, name: MinGW}
        exclude:
          - {platform: x64, use_asm: 1}
          - {os: ubuntu-20.04, use_asm: 1}
    runs-on: '${{ matrix.os }}'
    name: 'Build: ${{ matrix.name }} / ${{ matrix.platform }} / ASM: ${{ matrix.use_asm }} / ${{ matrix.configuration }}'
    env:
      platform: '${{ matrix.platform }}'
      configuration: '${{ matrix.configuration }}'
      boost_version: 1.72.0
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: '${{ matrix.platform }}'
        if: matrix.toolset == 'mingw'
      - name: Boost (MinGW)
        run: |
          cd cmake
          python -m project.ci.github.boost --toolset '${{ matrix.toolset }}' -- --with-filesystem --with-program_options --with-system
          echo 'BOOST_DIR=${{ runner.workspace }}\boost' >> $env:GITHUB_ENV
        if: matrix.toolset == 'mingw'
      - name: Boost (MSVC)
        run: |
          echo "BOOST_DIR=${env:BOOST_ROOT_1_72_0}" >> $env:GITHUB_ENV
        if: matrix.toolset == 'msvc'
      - name: Build
        run: |
          cd cmake
          python -m project.ci.github.cmake --toolset '${{ matrix.toolset }}' --boost $env:BOOST_DIR --install -- -D 'AES_TOOLS_ASM=${{ matrix.use_asm }}'
      - name: Upload the binaries
        uses: actions/upload-artifact@v2
        with:
          name: 'aes-tools-${{ matrix.os }}-${{ matrix.platform }}-asm${{ matrix.use_asm }}-${{ matrix.configuration }}'
          path: '${{ runner.workspace }}/install/'
      - name: Run test/nist.py
        run: |
          python test/nist.py --path ../install/bin --log test/nist.log
          Get-Content test/nist.log -Tail 5
        if: runner.os == 'Windows'
      - name: Run test/cavp.py
        run: |
          python test/cavp.py --path ../install/bin --log test/cavp.log
          Get-Content test/cavp.log -Tail 5
        if: runner.os == 'Windows'
      - name: Run test/nist.py --boxes
        run: |
          python test/nist.py --path ../install/bin --log test/nist.log --boxes
          Get-Content test/nist.log -Tail 5
        if: runner.os == 'Windows'
      - name: Run test/cavp.py --boxes
        run: |
          python test/cavp.py --path ../install/bin --log test/cavp.log --boxes
          Get-Content test/cavp.log -Tail 5
        if: runner.os == 'Windows'
      - name: Run test/file.py
        run: |
          python test/file.py --path ../install/bin --log test/file.log
          Get-Content test/file.log -Tail 5
        if: runner.os == 'Windows'
